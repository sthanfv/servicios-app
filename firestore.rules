rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Any signed in user can create their own profile document
      create: if isSignedIn() && isOwner(userId);
      // Public read for anyone
      read: if true;
      // Only the owner can update their profile (e.g. favorites)
      update: if isSignedIn() && isOwner(userId);
      // Users should not be able to delete their profiles for now
      delete: if false;
    }

    // Services collection
    match /services/{serviceId} {
      // Anyone can read services
      read: if true;
      // Signed in users can create services
      create: if isSignedIn();
      // Only the owner can update or delete their service
      update, delete: if isSignedIn() && isOwner(resource.data.userId);

      // Reviews subcollection
      match /reviews/{reviewId} {
        // Anyone can read reviews
        read: if true;
        // Signed in users can create reviews, but not for their own services
        create: if isSignedIn() && get(/databases/$(database)/documents/services/$(serviceId)).data.userId != request.auth.uid;
        // Users cannot update or delete reviews for now
        update, delete: if false;
      }
    }

    // Chats collection
    match /chats/{chatId} {
      // Read/Write is only allowed if the user is a participant in the chat
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.participants;
      
      // Messages subcollection
      match /messages/{messageId} {
         // Creating a message is allowed if the user is a participant in the parent chat
         create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
         // Only participants can read messages
         read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
         // Messages cannot be updated or deleted
         update, delete: if false;
      }
    }
  }
}
