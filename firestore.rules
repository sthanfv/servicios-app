
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can read their own user document and admins can read any.
    // Users can only be created during signup. Updates are restricted.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId; // Allow users to update their own profile
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Services can be read by anyone.
    // Only authenticated users can create services.
    // Only the owner or an admin can update or delete a service.
    match /services/{serviceId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // Reviews can be read by anyone.
      // Authenticated users (not the service owner) can add a review.
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && resource.data.userId != request.auth.uid;
        allow update, delete: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      }
    }
    
    // Chat messages can only be read/written by participants of the chat.
    match /chats/{chatId} {
        allow read, create: if request.auth != null && request.auth.uid in resource.data.participants;
        allow update: if request.auth != null && request.auth.uid in resource.data.participants;

        match /messages/{messageId} {
            allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
        }
    }
  }
}
