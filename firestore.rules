rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Users can read public profiles, but only the owner can write to their own document.
    // They can only modify specific fields like displayName, photoURL, and their favorites list.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.data.keys().hasAll(['uid', 'displayName', 'email', 'createdAt', 'role', 'favoriteServices'])
                   && request.resource.data.uid == userId
                   && request.resource.data.email == resource.data.email
                   && request.resource.data.createdAt == resource.data.createdAt
                   && request.resource.data.role == resource.data.role;
    }

    // Services: Anyone can read services. Only authenticated users can create services.
    // Only the owner can update or delete their own service.
    match /services/{serviceId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;

      // Reviews for services
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      }
    }

    // Chats: Only participants of a chat can read or write messages.
    match /chats/{chatId} {
      allow read, create, update, delete: if request.auth != null && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
         allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
         allow update, delete: if false; // Messages are immutable
      }
    }
  }
}
