rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USERS
    match /users/{userId} {
      // Anyone can read a user's public profile
      allow read: if true;
      // A user can create their own profile document
      allow create: if isOwner(userId);
      // A user can only update their own profile
      allow update: if isSignedIn() && isOwner(userId);
      // Users cannot delete their profiles through the app for now
      allow delete: if false; 
    }

    // SERVICES
    match /services/{serviceId} {
      // Anyone can read services
      allow read: if true;
      // Only signed-in users can create services
      allow create: if isSignedIn();
      // Only the owner of the service can update or delete it
      allow update, delete: if isSignedIn() && isOwner(resource.data.userId);
    }
    
    // REVIEWS (sub-collection of services)
    match /services/{serviceId}/reviews/{reviewId} {
        // Anyone can read reviews
        allow read: if true;
        // Only signed-in users who are not the service owner can create a review
        allow create: if isSignedIn() && request.auth.uid != get(/databases/$(database)/documents/services/$(serviceId)).data.userId;
        // Users cannot update or delete reviews for now
        allow update, delete: if false;
    }
    
    // CHATS
    match /chats/{chatId} {
        // Only participants can read/write to a chat document
        allow read, write: if isSignedIn() && request.auth.uid in resource.data.participants;
    }
    
    // MESSAGES (sub-collection of chats)
    match /chats/{chatId}/messages/{messageId} {
        // Only participants of the parent chat can read messages
        allow read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        // Only the sender who is a participant can create a message
        allow create: if isSignedIn() && isOwner(request.resource.data.senderId) && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        // Messages cannot be updated or deleted
        allow update, delete: if false;
    }
  }
}
