rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USERS
    // Users can read public profiles.
    // Users can only write to their own document.
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if isOwner(userId);
    }
    
    // SERVICES
    // Anyone can read services.
    // Signed-in users can create services.
    // Only the owner can update or delete their service.
    match /services/{serviceId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.userId);
      
      // REVIEWS (subcollection)
      // Anyone can read reviews.
      // Signed-in users can create reviews, but not for their own service.
      // Owner of a review can delete it. Admin can delete any review.
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isSignedIn() && request.auth.uid != get(/databases/$(database)/documents/services/$(serviceId)).data.userId;
        allow update: if false; // Reviews are not editable
        allow delete: if isOwner(resource.data.userId);
      }
    }

    // CHATS
    // Only participants can read/write to a chat document and its messages.
    match /chats/{chatId} {
        allow read, write: if isSignedIn() && request.auth.uid in resource.data.participants;
        
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
            allow update, delete: if false; // Messages are immutable
        }
    }
  }
}
